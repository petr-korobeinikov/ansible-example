Vagrant.require_version '>= 1.8'

class MachineDefinition
  attr_accessor :name, :ip, :ssh_port, :memory, :cpus

  def initialize(name, ip, ssh_port, memory, cpus)
    @name     = name
    @ip       = ip
    @ssh_port = ssh_port
    @memory   = memory
    @cpus     = cpus
  end
end

machine_defs = [
  MachineDefinition.new('nginx', '10.0.6.11', 2211, 256, 1),
  MachineDefinition.new('php1', '10.0.6.21', 2221, 512, 1),
  MachineDefinition.new('php2', '10.0.6.22', 2222, 512, 1),
  MachineDefinition.new('postgres-master', '10.0.6.31', 2231, 512, 2),
  MachineDefinition.new('postgres-slave1', '10.0.6.32', 2232, 512, 2),
  MachineDefinition.new('redis-master', '10.0.6.41', 2241, 256, 1),
  MachineDefinition.new('redis-slave1', '10.0.6.42', 2242, 256, 1),
  MachineDefinition.new('java1', '10.0.6.51', 2251, 512, 2),
  MachineDefinition.new('java2', '10.0.6.52', 2252, 512, 2),
  MachineDefinition.new('memcached1', '10.0.6.61', 2261, 256, 1),
  MachineDefinition.new('memcached2', '10.0.6.62', 2262, 256, 1),
  MachineDefinition.new('memcached3', '10.0.6.63', 2263, 256, 1),
]

Vagrant.configure(2) do |config|
  config.vm.box = 'ubuntu/trusty64'

  config.vm.provision :shell, inline: 'apt-get update'

  machine_defs.each_with_index do |machine_def, idx|
    config.vm.define machine_def.name do |machine|
      machine.vm.hostname = machine_def.name
      machine.vm.network :private_network, ip: machine_def.ip
      machine.vm.network :forwarded_port, guest: 22, host: machine_def.ssh_port, id: 'ssh'

      machine.vm.provider :virtualbox do |vb|
        vb.memory = machine_def.memory
        vb.cpus   = machine_def.cpus
      end

      machine.vm.provision :ansible do |ansible|
        #ansible.verbose  = true
        ansible.playbook = 'ansible/site.yml'
        ansible.limit    = 'all'
        ansible.groups   = {
          'nginx'               => %w(nginx),
          'php'                 => %w(php1 php2),
          'postgres'            => %w(postgres-master postgres-slave1),
          'redis'               => %w(redis-master redis-slave1),
          'java'                => %w(java1 java2),
          'memcached'           => %w(memcached1 memcached2 memcached3),
          'all_groups:children' => %w(nginx postgres redis php java memcached),
        }
      end if idx == machine_defs.size - 1
    end
  end
end
